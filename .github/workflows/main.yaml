name: CI/CD

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: production

    steps:
      -
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      -
        name: Build services
        env:
          IMAGE_TAG: ${{ github.sha }}
          CACHE_SRC_DIR: /tmp/.buildx-cache
          CACHE_DIST_DIR: /tmp/.buildx-cache-new
        uses: docker/bake-action@master
        with:
          files: docker-bake.hcl
      -
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  test:
    runs-on: ubuntu-latest

    steps:
      -
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      -
        name: Generate RSA keys
        run: bash backend/auth/keys/generate.sh
      -
        name: Test services
        env:
          CACHE_SRC_DIR: /tmp/.buildx-cache
        uses: docker/bake-action@master
        with:
          files: docker-bake.hcl
          targets: test
      -
        name: Start services
        run: |
          docker-compose up -d --build
          sleep 10
      -
        name: Check status of services
        run: |
          docker-compose logs
          echo ""
          docker-compose ps
          echo ""
          ps=`docker-compose ps | sed '1,2d'`
          all_count=`echo "$ps" | wc -l`
          up_count=`echo "$ps" | grep '   Up' | wc -l`
          if [[ $all_count != $up_count ]]; then
              echo "some services down (${up_count}/${all_count})"
              exit 1
          fi
          echo "All ok"
      -
        name: Get root page
        run: curl -LI localhost:9000 --fail -sS --retry 60 --retry-delay 2
      -
        name: The job has failed
        if: ${{ failure() }}
        run: docker-compose logs
      -
        name: Stop services
        run: docker-compose down

  push-images:
    runs-on: ubuntu-latest
    needs:
    - build
    - test
    environment:
      name: production
    
    steps:
      -
        uses: actions/checkout@v2
      -
        name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: oyas
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      -
        name: Push images
        env:
          IMAGE_TAG: ${{ github.sha }}
          CACHE_SRC_DIR: /tmp/.buildx-cache
        uses: docker/bake-action@master
        with:
          files: docker-bake.hcl
          push: true

  deploy:
    runs-on: ubuntu-latest
    needs:
    - push-images
    environment:
      name: production

    steps:
    -
      uses: imranismail/setup-kustomize@v1
      with:
        kustomize-version: "3.9.4"
    -
      run: git clone https://${REPO_TOKEN}@github.com/oyas/web-app-infra.git .
      env:
        REPO_TOKEN: ${{secrets.ACCESS_TOKEN_GITHUB}}
    -
      name: update image web-app-articles
      run: |
        cd apps/articles/overlays/dev
        kustomize edit set image oyas/web-app-articles:${GITHUB_SHA}
    -
      name: update image web-app-bff
      run: |
        cd apps/bff/overlays/dev/
        kustomize edit set image oyas/web-app-bff:${GITHUB_SHA}
    -
      name: update image web-app-frontend
      run: |
        cd apps/frontend/overlays/dev/
        kustomize edit set image oyas/web-app-frontend:${GITHUB_SHA}
    -
      name: commit
      run: |
        git version
        git add .
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -m "[GitHub Action] Set dev image tag to https://github.com/oyas/web-app/commit/${GITHUB_SHA}"
    -
      name: Push changes
      run: git push
