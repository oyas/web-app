name: CD

# Controls when the action will run.
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  workflow_run:
    workflows: [ "CI" ]
    branches: [ master, main ]
    types: [ completed ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  push-images:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    environment:
      name: production

    steps:
      -
        id: images_exist
        name: check images exist
        run: |
          if docker manifest inspect oyas/web-app-bff:${GITHUB_SHA}; then
            result=exist
          else
            result=not-exist
          fi
          echo "::set-output name=result::$result"
      -
        if: ${{ steps.images_exist.outputs.result == 'not-exist' }}
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        if: ${{ steps.images_exist.outputs.result == 'not-exist' }}
        uses: docker/setup-buildx-action@v1
      -
        name: Cache Docker layers
        if: ${{ steps.images_exist.outputs.result == 'not-exist' }}
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      -
        name: Login to DockerHub
        if: ${{ steps.images_exist.outputs.result == 'not-exist' }}
        uses: docker/login-action@v1
        with:
          username: oyas
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      -
        name: Push images
        if: ${{ steps.images_exist.outputs.result == 'not-exist' }}
        env:
          IMAGE_TAG: ${{ github.sha }}
          CACHE_SRC_DIR: /tmp/.buildx-cache
        uses: docker/bake-action@master
        with:
          files: docker-bake.hcl
          push: true

  deploy:
    runs-on: ubuntu-latest
    needs:
    - push-images
    environment:
      name: production

    steps:
    -
      uses: imranismail/setup-kustomize@v1
      with:
        kustomize-version: "3.9.4"
    -
      run: git clone https://${REPO_TOKEN}@github.com/oyas/web-app-infra.git .
      env:
        REPO_TOKEN: ${{secrets.ACCESS_TOKEN_GITHUB}}
    -
      name: update image web-app-articles
      run: |
        cd apps/articles/overlays/dev
        kustomize edit set image oyas/web-app-articles:${GITHUB_SHA}
    -
      name: update image web-app-bff
      run: |
        cd apps/bff/overlays/dev/
        kustomize edit set image oyas/web-app-bff:${GITHUB_SHA}
    -
      name: update image web-app-frontend
      run: |
        cd apps/frontend/overlays/dev/
        kustomize edit set image oyas/web-app-frontend:${GITHUB_SHA}
    -
      name: update image web-app-auth
      run: |
        cd apps/auth/overlays/dev/
        kustomize edit set image oyas/web-app-auth:${GITHUB_SHA}
    -
      name: commit
      run: |
        git version
        git add .
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -m "[GitHub Action] Set dev image tag to https://github.com/oyas/web-app/commit/${GITHUB_SHA}"
    -
      name: Push changes
      run: git push
